{
  "components": {
    "schemas": {
      "GetRecordsTestDto": {
        "properties": { "content": { "type": "string" }, "name": { "type": "string" } },
        "type": "object"
      },
      "Record": {
        "properties": {
          "id": {
            "type": "integer",
            "anyOf": [
              { "type": "string", "enum": [""] },
              {
                "not": {
                  "anyOf": [
                    { "type": "string" },
                    { "type": "number" },
                    { "type": "boolean" },
                    { "type": "integer" },
                    { "type": "array" },
                    { "type": "object" }
                  ]
                },
                "nullable": true
              }
            ]
          },
          "name": { "type": "string", "minLength": 1 },
          "content": { "type": "string", "minLength": 1 },
          "location": { "type": "string" },
          "createTime": {
            "oneOf": [
              { "format": "date", "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "anyOf": [
              { "type": "string", "enum": [""] },
              {
                "not": {
                  "anyOf": [
                    { "type": "string" },
                    { "type": "number" },
                    { "type": "boolean" },
                    { "type": "integer" },
                    { "type": "array" },
                    { "type": "object" }
                  ]
                },
                "nullable": true
              }
            ]
          },
          "updateTime": {
            "oneOf": [
              { "format": "date", "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "anyOf": [
              { "type": "string", "enum": [""] },
              {
                "not": {
                  "anyOf": [
                    { "type": "string" },
                    { "type": "number" },
                    { "type": "boolean" },
                    { "type": "integer" },
                    { "type": "array" },
                    { "type": "object" }
                  ]
                },
                "nullable": true
              }
            ]
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": { "basicAuth": { "scheme": "basic", "type": "http" } }
  },
  "info": { "title": "API", "version": "1.0.0", "description": "Generated with `routing-controllers-openapi`" },
  "openapi": "3.0.0",
  "paths": {
    "/ping": {
      "get": {
        "operationId": "PingController.ping",
        "responses": { "200": { "content": { "text/html; charset=utf-8": {} }, "description": "Successful response" } },
        "summary": "Return OK",
        "tags": ["Ping"]
      }
    },
    "/records": {
      "get": {
        "operationId": "RecordController.find",
        "parameters": [{ "in": "query", "name": "opt", "required": false, "schema": {} }],
        "responses": {
          "200": {
            "content": {
              "application/json": { "schema": { "items": { "$ref": "#/components/schemas/Record" }, "type": "array" } }
            },
            "description": ""
          }
        },
        "summary": "Return a list of records by opt",
        "tags": ["Record"]
      },
      "patch": {
        "operationId": "RecordController.update",
        "parameters": [{ "in": "query", "name": "opt", "required": false, "schema": {} }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Record" } } },
          "description": "Record",
          "required": false
        },
        "responses": { "204": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Update a record",
        "tags": ["Record"]
      },
      "post": {
        "operationId": "RecordController.create",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Record" } } },
          "description": "Record",
          "required": false
        },
        "responses": { "201": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Create a record",
        "tags": ["Record"]
      }
    },
    "/records/count": {
      "get": {
        "operationId": "RecordController.count",
        "parameters": [{ "in": "query", "name": "opt", "required": false, "schema": {} }],
        "responses": {
          "200": {
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Number" } } },
            "description": ""
          }
        },
        "summary": "Return a count of records by opt",
        "tags": ["Record"]
      }
    },
    "/records/{id}": {
      "get": {
        "operationId": "RecordController.findById",
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "number" } },
          { "in": "query", "name": "opt", "required": false, "schema": {} }
        ],
        "responses": {
          "200": {
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Record" } } },
            "description": ""
          }
        },
        "summary": "Return a record by id",
        "tags": ["Record"]
      },
      "patch": {
        "operationId": "RecordController.updateById",
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "number" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Record" } } },
          "description": "Record",
          "required": false
        },
        "responses": { "204": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Update a record by id",
        "tags": ["Record"]
      },
      "delete": {
        "operationId": "RecordController.deleteById",
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "number" } }],
        "responses": { "204": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Delete a record by id",
        "tags": ["Record"]
      }
    },
    "/records/upsert": {
      "post": {
        "operationId": "RecordController.upsert",
        "requestBody": {
          "content": { "application/json": { "schema": { "items": { "type": "object" }, "type": "array" } } },
          "description": "",
          "required": false
        },
        "responses": { "204": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Upsert a record",
        "tags": ["Record"]
      }
    },
    "/recordsByLike": {
      "get": {
        "operationId": "RecordController.getRecordsByLike",
        "parameters": [
          { "in": "query", "name": "content", "schema": { "type": "string" } },
          { "in": "query", "name": "name", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { "schema": { "items": { "$ref": "#/components/schemas/Record" }, "type": "array" } }
            },
            "description": ""
          }
        },
        "summary": "Return a list of records by dto",
        "tags": ["Record"]
      }
    },
    "/records/deleteAndCreate/{id}": {
      "post": {
        "operationId": "RecordController.deleteAndCreate",
        "parameters": [{ "in": "path", "name": "id", "required": true, "schema": { "type": "number" } }],
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Record" } } },
          "description": "Record",
          "required": false
        },
        "responses": { "200": { "content": { "application/json": {} }, "description": "Successful response" } },
        "summary": "Delete a record and create a record",
        "tags": ["Record"]
      }
    }
  },
  "servers": [{ "url": "http://[::1]:3000/" }]
}
